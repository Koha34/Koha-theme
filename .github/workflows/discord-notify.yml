name: Discord Notify

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, closed]
  release:
    types: [published]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Assemble Discord Message
      id: build
      env:
        GH_EVENT: ${{ toJson(github) }}
      run: |
        # ---------- Push ----------
        if [[ "${{ github.event_name }}" == "push" ]]; then
          # 先頭コミットを取得（通常1件）
          SHA="${{ github.event.head_commit.id }}"
          SHORTSHA="${SHA::7}"
          AUTHOR="${{ github.event.head_commit.author.username }}"
          MSG="$(echo "${{ github.event.head_commit.message }}" | head -n1)"

          # 変更ファイル名（最初の1つを表示、複数なら+α）
          FILES=$(jq -r '.head_commit.modified + .head_commit.added + .head_commit.removed | @sh' <<<"$GH_EVENT" | tr -d "'")
          IFS=' ' read -r FIRST REST <<< "$FILES"
          if [[ -n "$REST" ]]; then
            FILE_LABEL="${FIRST} 他"
          else
            FILE_LABEL="$FIRST"
          fi

          TITLE="🔄 **Push** to \`${{ github.ref_name }}\`"
          DESCRIPTION="${AUTHOR} が ${FILE_LABEL}・${SHORTSHA} を変更しました！\n変更内容：${MSG}"
          URL="${{ github.event.compare }}"
          COLOR="3447003"
        # ---------- Pull Request ----------
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
          if [[ "${{ github.event.action }}" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
            TITLE="✅ **PR Merged** #${{ github.event.pull_request.number }}"
            COLOR="5763719"
          else
            TITLE="📣 **PR Opened** #${{ github.event.pull_request.number }}"
            COLOR="16753920"
          fi
          DESCRIPTION="${{ github.event.pull_request.title }}"
          URL="${{ github.event.pull_request.html_url }}"
        # ---------- Release ----------
        else
          TITLE="🏷️ **Release** \`${{ github.event.release.tag_name }}\`"
          DESCRIPTION="${{ github.event.release.name }}"
          URL="${{ github.event.release.html_url }}"
          COLOR="15844367"
        fi

        # ---------- JSON Embed ----------
        jq -n --arg title "$TITLE" \
              --arg url "$URL" \
              --arg desc "$DESCRIPTION" \
              --arg color "$COLOR" \
        '{embeds:[{title:$title,url:$url,description:$desc,color:($color|tonumber)}]}' > discordmsg.json

        echo "payload<<EOF" >> $GITHUB_OUTPUT
        cat discordmsg.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Post to Discord Webhook
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        method: 'POST'
        contentType: 'application/json'
        data: ${{ steps.build.outputs.payload }}
