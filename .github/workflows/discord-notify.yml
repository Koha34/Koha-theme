name: Discord Notify

on:
  push:
    branches: [ main ]              # main への Push
  pull_request:
    types: [opened, closed]         # PR 作成・マージ
  release:
    types: [published]              # Release 公開

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    # ① コードを取得（差分情報用）
    - name: Checkout
      uses: actions/checkout@v4

    # ② Discord 用 JSON を生成
    - name: Assemble Discord Message
      id: build
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          EVENT="🔄 **Push** to \`${{ github.ref_name }}\`"
          URL="${{ github.event.compare }}"
          COLOR="3447003"
          DESCRIPTION="$(git log -1 --pretty=format:'%s (%an)')"
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
          if [[ "${{ github.event.action }}" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
            EVENT="✅ **PR Merged** #${{ github.event.pull_request.number }}"
            COLOR="5763719"
          else
            EVENT="📣 **PR Opened** #${{ github.event.pull_request.number }}"
            COLOR="16753920"
          fi
          URL="${{ github.event.pull_request.html_url }}"
          DESCRIPTION="${{ github.event.pull_request.title }}"
        else
          EVENT="🏷️ **Release** \`${{ github.event.release.tag_name }}\`"
          URL="${{ github.event.release.html_url }}"
          COLOR="15844367"
          DESCRIPTION="${{ github.event.release.name }}"
        fi

        # jq で Embed JSON を作成
        jq -n --arg title "$EVENT" \
              --arg url "$URL" \
              --arg desc "$DESCRIPTION" \
              --arg color "$COLOR" \
        '{embeds:[{title:$title,url:$url,description:$desc,color:($color|tonumber)}]}' > discordmsg.json

        # マルチライン出力で次ステップへ渡す
        echo "payload<<EOF" >> $GITHUB_OUTPUT
        cat discordmsg.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    # ③ Discord Webhook へ POST
    - name: Post to Discord Webhook
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ secrets.DISCORD_WEBHOOK_URL }}   # ②で登録した Secret
        method: 'POST'
        contentType: 'application/json'
        data: ${{ steps.build.outputs.payload }}  # JSON を直接渡す
